Module(
  [
    Assign(
      [Name(
          "i",
          Store())],
      Constant(1)),
    Assign(
      [Name(
          "fact",
          Store())],
      Constant(1)),
    Assign(
      [Name(
          "number",
          Store())],
      Constant("None")),
    Expr(Call(
        Name(
          "print",
          Load()),
        [Constant("\"Enter a number: \"")],
        [])),
    Assign(
      [Name(
          "number",
          Store())],
      Call(
        Name(
          "int",
          Load()),
        [Call(
            Name(
              "input",
              Load()),
            [],
            [])],
        [])),
    If(
      Constant(1),
      [
        Assign(
          [Name(
              "i",
              Store())],
          Constant(1)),
        While(
          Compare(
            Name(
              "i",
              Load()),
            [LtE()],
            [Name(
                "number",
                Load())]),
          [
            Assign(
              [Name(
                  "fact",
                  Store())],
              BinOp(
                Name(
                  "fact",
                  Load()),
                Mult(),
                Name(
                  "i",
                  Load()))),
            Assign(
              [Name(
                  "i",
                  Store())],
              BinOp(
                Name(
                  "i",
                  Load()),
                Add(),
                Constant(1)))
          ],
          [])
      ],
      []),
    Expr(Call(
        Name(
          "print",
          Load()),
        [Constant("\"Factorial of input is: \"")],
        [])),
    Expr(Call(
        Name(
          "print",
          Load()),
        [Name(
            "fact",
            Load())],
        [])),
    Expr(Call(
        Name(
          "exit",
          Load()),
        [Constant(0)],
        []))
  ],
  [])